#!/usr/bin/env ruby
# Hulu Automuter
# by Daniel Choi <dhchoi@gmail.com>
# License: MIT License (c) 2011 Daniel Choi

require 'webrick/httpproxy'

port = 8123

pid = Process.pid
`ps aux | grep ruby | grep automuter-osx | awk '{print $2}' | grep -v #{pid} | xargs kill -INT`

module HuluControl
  class OSX
    def initialize
      @last_volume = 70
    end

    def mute
      vol = `osascript -e "get output volume of (get volume settings)"`.strip.to_i
      if vol > 0
        @last_volume = vol
        puts "Remember last volume: #{@last_volume}"
      end
      %Q|osascript -e "set Volume output volume 0"|
    end

    def unmute
      %Q|osascript -e "set Volume output volume #{@last_volume}"|
    end
  end
end
hc = HuluControl::OSX.new

proxyproc = Proc.new{|req,res| 
  if req.host !~ /hulu\.com/
    next
  end
  r = req.path
  if r =~ /adload/ 
    puts ["ad loaded", hc.mute].join(', ')
    `#{hc.mute}`
  elsif r =~ /contentplaybackresume/
    puts ["content resuming", hc.unmute].join(', ')
    `#{hc.unmute}`
  end
  nil
}

#$stderr = File.open('/dev/null', 'w')
#$stderr = File.open('/Users/choi/automuter_osx.log', 'a')

begin
  s = WEBrick::HTTPProxyServer.new(:Port => port, :BindAddress => '0.0.0.0', :RequestCallback => proxyproc)
rescue 
  $stderr = STDERR
  raise
end

def pac_path
  "file://localhost" + File.expand_path(File.dirname(__FILE__), 'automuter.pac')
end

def passthrough_pac_path
  "file://localhost" + File.expand_path(File.dirname(__FILE__), 'automuter_off.pac')
end

def run(cmd)
  puts cmd
  `#{cmd}`
end

def config_proxy
  run "networksetup -setautoproxyurl AirPort #{pac_path}"
  run "networksetup -setautoproxyurl Ethernet #{pac_path}"
end

def unconfig_proxy
  run "networksetup -setautoproxyurl AirPort #{passthrough_pac_path}"
  run "networksetup -setautoproxyurl Ethernet #{passthrough_pac_path}"
end

standalone_mode = false
if ARGV.first =~ /-/
  standalone_mode = true
end

trap("INT"){
  s.shutdown
  if standalone_mode
    unconfig_proxy
  end
  exit
}

puts "HuluAutomuter is starting on port #{port} at #{Time.now}"
puts "Please remember to configure your web browser to use this HTTP proxy"
puts "Press CTRL-C to stop"

if standalone_mode
  puts "Setting up http proxy"
  config_proxy
end
s.start

puts "Done"


__END__
# pac_path = File.expand_path(File.dirname(__FILE__), 'automuter.pac')
#`networksetup -setwebproxy AirPort 127.0.0.1 8123`
#`networksetup -setwebproxystate AirPort on`

